import io
import sys

_INPUT = """\
50 50
2 2
49 49
##################################################
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
#................................................#
##################################################
"""
"""
スタート 2-2 ゴール 4-5で最短の移動数を算出
幅優先探索で解けとのお題
"""
sys.stdin = io.StringIO(_INPUT)
import queue
import math

q = queue.Queue()


def getNext(x, y, maze):
    next = []
    if maze[y][x - 1] == '.':
        next.append((y, x - 1))
    if maze[y][x + 1] == '.':
        next.append((y, x + 1))
    if maze[y - 1][x] == '.':
        next.append((y - 1, x))
    if maze[y + 1][x] == '.':
        next.append((y + 1, x))
    return next


# 4方向探索がシンプルに記述できない
#for i in range(4):
#    print('4方向探索', round(math.cos(math.pi * i / 2)),
#          round(math.sin(math.pi * i / 2)))
R, C = map(int, input().split())
SY, SX = map(int, input().split())
GY, GX = map(int, input().split())
maze = [None] * (R + 1)
for i in range(R):
    maze[i] = list(input())

maze[R] = [None for _ in range(C)]

mazeSteps = [[-1 for _ in range(C)] for _ in range(R)]

# debug
#for m in maze:
#    print(m)
#for ms in mazeSteps:
#    print(ms)

mazeSteps[SY - 1][SX - 1] = 0

q.put((SY - 1, SX - 1))
while not q.empty():
    y, x = q.get()
    next = getNext(x, y, maze)
    for pY, pX in next:
        if mazeSteps[pY][pX] > -1:
            continue
        else:
            mazeSteps[pY][pX] = mazeSteps[y][x] + 1
            if pX == (GX - 1) and pY == (GY - 1):
                print(mazeSteps[pY][pX])
                # debug
                #for ms in mazeSteps:
                #    print(ms)
                exit(0)
            else:
                q.put((pY, pX))
